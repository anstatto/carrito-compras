// Este es tu archivo de esquema Prisma,
// aprende más sobre él en la documentación: https://pris.ly/d/prisma-schema

// ¿Buscas formas de acelerar tus consultas o escalar fácilmente con tus funciones serverless o edge?
// Prueba Prisma Accelerate: https://pris.ly/cli/accelerate-init

// This is a marker comment to force a new migration
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modelo de Categorías
model Categoria {
  id            String     @id @default(cuid())
  nombre        String
  descripcion   String?
  imagen        String?    
  slug          String     @unique 
  productos     Producto[]
  activa        Boolean    @default(true)
  creadoEl      DateTime   @default(now()) @map("creado_el")
  actualizadoEl DateTime   @updatedAt @map("actualizado_el")

  @@map("categorias")
  @@index([slug])
  @@index([activa])
  @@index([nombre])
}

// Modelo de Productos
model Producto {
  id            String    @id @default(cuid())
  nombre        String
  descripcion   String
  precio        Decimal   @db.Decimal(10,2)
  imagenes      Image[]   
  slug          String    @unique
  sku           String    @unique
  marca         MarcaProducto
  existencias   Int
  stockMinimo   Int       @default(5) @map("stock_minimo")
  limitePorCompra Int?    @map("limite_por_compra")
  enOferta      Boolean   @default(false) @map("en_oferta")
  precioOferta  Decimal?  @db.Decimal(10,2) @map("precio_oferta")
  destacado     Boolean   @default(false)
  categoria     Categoria @relation(fields: [categoriaId], references: [id])
  categoriaId   String    @map("categoria_id")
  activo        Boolean   @default(true)
  creadoEl      DateTime  @default(now()) @map("creado_el")
  actualizadoEl DateTime  @updatedAt @map("actualizado_el")
  MovimientoInventario MovimientoInventario[]
  items         ItemPedido[]
  carritoItems  CarritoItem[]
  favoritos     Favorito[]

  @@map("productos")
  @@index([categoriaId])
  @@index([slug])
  @@index([sku])
  @@index([enOferta])
  @@index([precio])
  @@index([precioOferta])
  @@index([destacado])
  @@index([activo, enOferta])
  @@index([categoriaId, activo])
  @@index([existencias])
}

// Modelo de Imágenes
model Image {
  id          String    @id @default(cuid())
  url         String
  alt         String?
  principal   Boolean   @default(false)
  producto    Producto  @relation(fields: [productoId], references: [id], onDelete: Cascade)
  productoId  String    @map("producto_id")
  orden       Int       @default(0)
  creadoEl    DateTime  @default(now()) @map("creado_el")

  @@map("imagenes")
  @@index([productoId])
}

// Modelo de Movimientos de Inventario
model MovimientoInventario {
  id          String    @id @default(cuid())
  producto    Producto  @relation(fields: [productoId], references: [id])
  productoId  String
  tipo        TipoMovimiento
  cantidad    Int
  nota        String?
  creadoPor   User      @relation(fields: [userId], references: [id])
  userId      String
  creadoEl    DateTime  @default(now())

  @@map("movimientos_inventario")
  @@index([productoId])
  @@index([userId])
}

// Modelo de Pedidos
model Pedido {
  id            String        @id @default(cuid())
  numero        String        @unique
  clienteId     String
  cliente       User          @relation(fields: [clienteId], references: [id])
  items         ItemPedido[]
  subtotal      Decimal       @default(0)
  impuestos     Decimal       @default(0)
  costoEnvio    Decimal       @default(0)
  total         Decimal       @default(0)
  estado        EstadoPedido  @default(PENDIENTE)
  estadoPago    EstadoPago    @default(PENDIENTE) @map("estado_pago")
  metodoPago    MetodoPago?   @relation(fields: [metodoPagoId], references: [id])
  metodoPagoId  String?       @map("metodo_pago_id")
  direccion     Direccion     @relation(fields: [direccionId], references: [id])
  direccionId   String        @map("direccion_id")
  stripePaymentIntentId String? @unique @map("stripe_payment_intent_id")
  notas         String?
  creadoEl      DateTime      @default(now()) @map("creado_el")
  actualizadoEl DateTime      @updatedAt @map("actualizado_el")

  @@map("pedidos")
  @@index([clienteId])
  @@index([estado])
  @@index([estadoPago])
  @@index([creadoEl])
  @@index([numero])
}

// Modelo de Items de Pedido
model ItemPedido {
  id          String   @id @default(cuid())
  pedidoId    String
  pedido      Pedido   @relation(fields: [pedidoId], references: [id])
  productoId  String
  producto    Producto @relation(fields: [productoId], references: [id])
  cantidad    Int
  precioUnit  Decimal
  subtotal    Decimal
  enOferta    Boolean  @default(false) @map("en_oferta")
  precioRegular Decimal? @db.Decimal(10,2) @map("precio_regular")
  precioOferta  Decimal? @db.Decimal(10,2) @map("precio_oferta")
  porcentajeDescuento Int? @map("porcentaje_descuento")
  creadoEl    DateTime @default(now()) @map("creado_el")

  @@map("items_pedido")
  @@index([pedidoId])
  @@index([productoId])
}

// Modelo de Usuario
model User {
  id                String      @id @default(cuid())
  nombre            String
  apellido          String
  email             String      @unique
  password          String
  role              Role        @default(USER)
  telefono          String?
  pedidos           Pedido[]
  movimientos       MovimientoInventario[]
  activo            Boolean     @default(true)
  creadoEl          DateTime    @default(now()) @map("creado_el")
  actualizadoEl     DateTime    @updatedAt @map("actualizado_el")
  carritoItems      CarritoItem[]
  carritoActualizado DateTime?  @map("carrito_actualizado")
  favoritos         Favorito[]
  direcciones       Direccion[]
  stripeCustomerId  String?  @unique @map("stripe_customer_id")
  metodoPagos       MetodoPago[]

  @@map("usuarios")
  @@index([email])
  @@index([activo])
}

// Modelo de Items del Carrito
model CarritoItem {
  id            String    @id @default(cuid())
  userId        String    @map("user_id")
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  productoId    String    @map("producto_id")
  producto      Producto  @relation(fields: [productoId], references: [id], onDelete: Cascade)
  cantidad      Int       @default(1)
  precioUnitario Decimal  @db.Decimal(10,2) @map("precio_unitario")
  subtotal      Decimal   @db.Decimal(10,2)
  creadoEl      DateTime  @default(now()) @map("creado_el")
  actualizadoEl DateTime  @updatedAt @map("actualizado_el")

  @@unique([userId, productoId])
  @@map("carrito_items")
  @@index([userId])
  @@index([productoId])
  @@index([creadoEl])
}

// Modelo de Favoritos
model Favorito {
  id          String    @id @default(cuid())
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  productoId  String
  producto    Producto  @relation(fields: [productoId], references: [id])
  creadoEl    DateTime  @default(now()) @map("creado_el")

  @@unique([userId, productoId])
  @@map("favoritos")
  @@index([userId])
  @@index([productoId])
}

// Enum para provincias de RD
enum ProvinciaRD {
  AZUA
  BAHORUCO
  BARAHONA
  DAJABON
  DISTRITO_NACIONAL
  DUARTE
  EL_SEIBO
  ELIAS_PINA
  ESPAILLAT
  HATO_MAYOR
  HERMANAS_MIRABAL
  INDEPENDENCIA
  LA_ALTAGRACIA
  LA_ROMANA
  LA_VEGA
  MARIA_TRINIDAD_SANCHEZ
  MONSENOR_NOUEL
  MONTE_CRISTI
  MONTE_PLATA
  PEDERNALES
  PERAVIA
  PUERTO_PLATA
  SAMANA
  SAN_CRISTOBAL
  SAN_JOSE_DE_OCOA
  SAN_JUAN
  SAN_PEDRO_DE_MACORIS
  SANCHEZ_RAMIREZ
  SANTIAGO
  SANTIAGO_RODRIGUEZ
  SANTO_DOMINGO
  VALVERDE
}

// Enum para agencias de envío en RD
enum AgenciaEnvio {
  VIMENPAQ
  CARIBE_EXPRESS
  CARIBE_TOURS
  DOMINICANA_CARGO
  ENVIOS_BOYCA
  PACK_EXPRESS
  SERVI_CARGO
  OTRO
}

// Modelo de Direcciones
model Direccion {
  id              String      @id @default(cuid())
  userId          String      @map("user_id")
  user            User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  calle           String      @db.VarChar(100)
  numero          String      @map("numero") @db.VarChar(20)
  sector          String      @db.VarChar(100)
  provincia       ProvinciaRD
  municipio       String      @db.VarChar(100)
  codigoPostal    String?     @map("codigo_postal") @db.VarChar(10)
  referencia      String?     @db.VarChar(200)
  telefono        String      @db.VarChar(20)
  celular         String?     @db.VarChar(20)
  agenciaEnvio    AgenciaEnvio?  @map("agencia_envio")
  sucursalAgencia String?     @map("sucursal_agencia") @db.VarChar(100)
  predeterminada  Boolean     @default(false)
  pedidos         Pedido[]
  creadoEl        DateTime    @default(now()) @map("creado_el")
  actualizadoEl   DateTime    @updatedAt @map("actualizado_el")

  @@map("direcciones")
  @@index([userId])
  @@index([predeterminada])
}

// Modelo de Métodos de Pago
model MetodoPago {
  id            String    @id @default(cuid())
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  tipo          TipoPago
  ultimosDigitos String?  @map("ultimos_digitos")
  marca         String?   @map("marca") // VISA, MASTERCARD, AMEX, etc.
  predeterminado Boolean  @default(false)
  stripePaymentMethodId String? @unique @map("stripe_payment_method_id")
  pedidos       Pedido[]
  creadoEl      DateTime  @default(now()) @map("creado_el")
  actualizadoEl DateTime  @updatedAt @map("actualizado_el")

  @@map("metodos_pago")
  @@index([userId])
}

// Enums
enum TipoMovimiento {
  ENTRADA
  SALIDA
  AJUSTE
  DEVOLUCION
}

enum EstadoPedido {
  PENDIENTE
  PAGADO
  CONFIRMADO
  PREPARANDO
  ENVIADO
  ENTREGADO
  CANCELADO
}

enum EstadoPago {
  PENDIENTE
  PROCESANDO
  PAGADO
  FALLIDO
  REEMBOLSADO
}

enum TipoPago {
  TARJETA
  OXXO
  EFECTIVO
  TRANSFERENCIA
  STRIPE
}

enum Role {
  USER
  ADMIN
}

// Enum para marcas de tarjetas
enum MarcaTarjeta {
  VISA
  MASTERCARD
  AMEX
  CARNET
}

// Enum para marcas de productos
enum MarcaProducto {
  ARLIN_GLOW
  LOREAL
  MAYBELLINE
  MAC
  NIVEA
  NEUTROGENA
  OTRO
}
