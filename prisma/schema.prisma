// Este es tu archivo de esquema Prisma,
// aprende más sobre él en la documentación: https://pris.ly/d/prisma-schema

// ¿Buscas formas de acelerar tus consultas o escalar fácilmente con tus funciones serverless o edge?
// Prueba Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Categoria {
  id            String     @id @default(cuid())
  nombre        String
  descripcion   String?
  imagen        String?    
  slug          String     @unique 
  productos     Producto[]
  activa        Boolean    @default(true)
  creadoEl      DateTime   @default(now()) @map("creado_el")
  actualizadoEl DateTime   @updatedAt @map("actualizado_el")

  @@map("categorias")
  @@index([slug])
}

model Producto {
  id            String    @id @default(cuid())
  nombre        String
  descripcion   String
  precio        Decimal   @db.Decimal(10,2)
  imagenes      Image[]   
  slug          String    @unique
  sku           String    @unique
  marca         String?
  existencias   Int
  stockMinimo   Int       @default(5) @map("stock_minimo")
  enOferta      Boolean   @default(false) @map("en_oferta")
  precioOferta  Decimal?  @db.Decimal(10,2) @map("precio_oferta")
  destacado     Boolean   @default(false)
  categoria     Categoria @relation(fields: [categoriaId], references: [id])
  categoriaId   String    @map("categoria_id")
  activo        Boolean   @default(true)
  creadoEl      DateTime  @default(now()) @map("creado_el")
  actualizadoEl DateTime  @updatedAt @map("actualizado_el")
  MovimientoInventario MovimientoInventario[]
  items         ItemPedido[]

  @@map("productos")
  @@index([categoriaId])
  @@index([slug])
  @@index([sku])
}

model Image {
  id          String    @id @default(cuid())
  url         String
  alt         String?
  principal   Boolean   @default(false)
  producto    Producto  @relation(fields: [productoId], references: [id], onDelete: Cascade)
  productoId  String    @map("producto_id")
  orden       Int       @default(0)
  creadoEl    DateTime  @default(now()) @map("creado_el")

  @@map("imagenes")
  @@index([productoId])
}

model MovimientoInventario {
  id          String    @id @default(cuid())
  producto    Producto  @relation(fields: [productoId], references: [id])
  productoId  String
  tipo        TipoMovimiento
  cantidad    Int
  nota        String?
  creadoPor   User      @relation(fields: [userId], references: [id])
  userId      String
  creadoEl    DateTime  @default(now())
}

enum TipoMovimiento {
  ENTRADA
  SALIDA
  AJUSTE
  DEVOLUCION
}

model Pedido {
  id            String        @id @default(cuid())
  numero        String        @unique
  clienteId     String
  cliente       User          @relation(fields: [clienteId], references: [id])
  items         ItemPedido[]
  total         Decimal       @default(0)
  estado        EstadoPedido  @default(PENDIENTE)
  metodoPago    String?
  direccion     String?
  notas         String?
  creadoEl      DateTime      @default(now())
  actualizadoEl DateTime      @updatedAt

  @@index([clienteId, estado])
}

model ItemPedido {
  id          String   @id @default(cuid())
  pedidoId    String
  pedido      Pedido   @relation(fields: [pedidoId], references: [id])
  productoId  String
  producto    Producto @relation(fields: [productoId], references: [id])
  cantidad    Int
  precioUnit  Decimal
  subtotal    Decimal
  creadoEl    DateTime @default(now())

  @@index([pedidoId])
  @@index([productoId])
}

enum EstadoPedido {
  PENDIENTE
  PAGADO
  PREPARANDO
  ENVIADO
  ENTREGADO
  CANCELADO
}

enum MetodoPago {
  TARJETA
  TRANSFERENCIA
  PAYPAL
  EFECTIVO
}

enum Role {
  USER
  ADMIN
}

model User {
  id          String    @id @default(cuid())
  nombre      String
  apellido    String
  email       String    @unique
  password    String
  role        Role      @default(USER)
  telefono    String?
  pedidos     Pedido[]
  movimientos MovimientoInventario[]
  activo      Boolean   @default(true)
  creadoEl    DateTime  @default(now())
  actualizadoEl DateTime @updatedAt

  @@index([email, activo]) // Índice compuesto para búsquedas frecuentes
}
